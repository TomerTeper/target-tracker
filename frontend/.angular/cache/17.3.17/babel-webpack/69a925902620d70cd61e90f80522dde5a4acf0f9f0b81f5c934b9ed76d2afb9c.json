{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class StreamControlsComponent {\n  constructor() {\n    this.isConnected = false;\n    this.selectedClassification = '';\n    this.toggleStream = new EventEmitter();\n    this.clearTargets = new EventEmitter();\n    this.filterChange = new EventEmitter();\n  }\n  onToggleStream() {\n    this.toggleStream.emit();\n  }\n  onClearTargets() {\n    this.clearTargets.emit();\n  }\n  onFilterChange() {\n    this.filterChange.emit(this.selectedClassification);\n  }\n  static {\n    this.ɵfac = function StreamControlsComponent_Factory(t) {\n      return new (t || StreamControlsComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StreamControlsComponent,\n      selectors: [[\"app-stream-controls\"]],\n      inputs: {\n        isConnected: \"isConnected\",\n        selectedClassification: \"selectedClassification\"\n      },\n      outputs: {\n        toggleStream: \"toggleStream\",\n        clearTargets: \"clearTargets\",\n        filterChange: \"filterChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 16,\n      vars: 4,\n      consts: [[1, \"controls\"], [1, \"filter-controls\"], [\"for\", \"classification-filter\"], [\"id\", \"classification-filter\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"\"], [\"value\", \"hostile\"], [\"value\", \"friendly\"], [1, \"stream-controls\"], [1, \"stream-btn\", 3, \"click\"], [1, \"clear-btn\", 3, \"click\"]],\n      template: function StreamControlsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n          i0.ɵɵtext(3, \"Filter by Classification:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"select\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function StreamControlsComponent_Template_select_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedClassification, $event) || (ctx.selectedClassification = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function StreamControlsComponent_Template_select_change_4_listener() {\n            return ctx.onFilterChange();\n          });\n          i0.ɵɵelementStart(5, \"option\", 4);\n          i0.ɵɵtext(6, \"All Targets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"option\", 5);\n          i0.ɵɵtext(8, \"Hostile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 6);\n          i0.ɵɵtext(10, \"Friendly\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function StreamControlsComponent_Template_button_click_12_listener() {\n            return ctx.onToggleStream();\n          });\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function StreamControlsComponent_Template_button_click_14_listener() {\n            return ctx.onClearTargets();\n          });\n          i0.ɵɵtext(15, \"Clear All\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedClassification);\n          i0.ɵɵadvance(8);\n          i0.ɵɵclassProp(\"active\", ctx.isConnected);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isConnected ? \"Stop Stream\" : \"Start Stream\", \" \");\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n      styles: [\".controls[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 20px;\\n      padding: 15px;\\n      background-color: #f8f9fa;\\n      border-radius: 8px;\\n    }\\n\\n    .filter-controls[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 10px;\\n    }\\n\\n    .filter-controls[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      font-weight: 500;\\n      color: #555;\\n    }\\n\\n    .filter-controls[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      padding: 8px 12px;\\n      border: 1px solid #ddd;\\n      border-radius: 4px;\\n      background-color: white;\\n      font-size: 14px;\\n    }\\n\\n    .stream-controls[_ngcontent-%COMP%] {\\n      display: flex;\\n      gap: 10px;\\n    }\\n\\n    .stream-btn[_ngcontent-%COMP%], .clear-btn[_ngcontent-%COMP%] {\\n      padding: 10px 20px;\\n      border: none;\\n      border-radius: 6px;\\n      font-weight: 500;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .stream-btn[_ngcontent-%COMP%] {\\n      background-color: #007bff;\\n      color: white;\\n    }\\n\\n    .stream-btn[_ngcontent-%COMP%]:hover {\\n      background-color: #0056b3;\\n    }\\n\\n    .stream-btn.active[_ngcontent-%COMP%] {\\n      background-color: #dc3545;\\n    }\\n\\n    .stream-btn.active[_ngcontent-%COMP%]:hover {\\n      background-color: #c82333;\\n    }\\n\\n    .clear-btn[_ngcontent-%COMP%] {\\n      background-color: #6c757d;\\n      color: white;\\n    }\\n\\n    .clear-btn[_ngcontent-%COMP%]:hover {\\n      background-color: #545b62;\\n    }\\n\\n    @media (max-width: 768px) {\\n      .controls[_ngcontent-%COMP%] {\\n        flex-direction: column;\\n        gap: 15px;\\n      }\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdHJlYW0tY29udHJvbHMvc3RyZWFtLWNvbnRyb2xzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7TUFDRSxhQUFhO01BQ2IsOEJBQThCO01BQzlCLG1CQUFtQjtNQUNuQixtQkFBbUI7TUFDbkIsYUFBYTtNQUNiLHlCQUF5QjtNQUN6QixrQkFBa0I7SUFDcEI7O0lBRUE7TUFDRSxhQUFhO01BQ2IsbUJBQW1CO01BQ25CLFNBQVM7SUFDWDs7SUFFQTtNQUNFLGdCQUFnQjtNQUNoQixXQUFXO0lBQ2I7O0lBRUE7TUFDRSxpQkFBaUI7TUFDakIsc0JBQXNCO01BQ3RCLGtCQUFrQjtNQUNsQix1QkFBdUI7TUFDdkIsZUFBZTtJQUNqQjs7SUFFQTtNQUNFLGFBQWE7TUFDYixTQUFTO0lBQ1g7O0lBRUE7TUFDRSxrQkFBa0I7TUFDbEIsWUFBWTtNQUNaLGtCQUFrQjtNQUNsQixnQkFBZ0I7TUFDaEIsZUFBZTtNQUNmLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLHlCQUF5QjtNQUN6QixZQUFZO0lBQ2Q7O0lBRUE7TUFDRSx5QkFBeUI7SUFDM0I7O0lBRUE7TUFDRSx5QkFBeUI7SUFDM0I7O0lBRUE7TUFDRSx5QkFBeUI7SUFDM0I7O0lBRUE7TUFDRSx5QkFBeUI7TUFDekIsWUFBWTtJQUNkOztJQUVBO01BQ0UseUJBQXlCO0lBQzNCOztJQUVBO01BQ0U7UUFDRSxzQkFBc0I7UUFDdEIsU0FBUztNQUNYO0lBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAuY29udHJvbHMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgfVxuXG4gICAgLmZpbHRlci1jb250cm9scyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogMTBweDtcbiAgICB9XG5cbiAgICAuZmlsdGVyLWNvbnRyb2xzIGxhYmVsIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBjb2xvcjogIzU1NTtcbiAgICB9XG5cbiAgICAuZmlsdGVyLWNvbnRyb2xzIHNlbGVjdCB7XG4gICAgICBwYWRkaW5nOiA4cHggMTJweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICAuc3RyZWFtLWNvbnRyb2xzIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBnYXA6IDEwcHg7XG4gICAgfVxuXG4gICAgLnN0cmVhbS1idG4sIC5jbGVhci1idG4ge1xuICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgfVxuXG4gICAgLnN0cmVhbS1idG4ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICAuc3RyZWFtLWJ0bjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xuICAgIH1cblxuICAgIC5zdHJlYW0tYnRuLmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xuICAgIH1cblxuICAgIC5zdHJlYW0tYnRuLmFjdGl2ZTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzgyMzMzO1xuICAgIH1cblxuICAgIC5jbGVhci1idG4ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICAuY2xlYXItYnRuOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM1NDViNjI7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY29udHJvbHMge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBnYXA6IDE1cHg7XG4gICAgICB9XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","CommonModule","FormsModule","StreamControlsComponent","constructor","isConnected","selectedClassification","toggleStream","clearTargets","filterChange","onToggleStream","emit","onClearTargets","onFilterChange","selectors","inputs","outputs","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","StreamControlsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","StreamControlsComponent_Template_select_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","StreamControlsComponent_Template_select_change_4_listener","StreamControlsComponent_Template_button_click_12_listener","StreamControlsComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵtwoWayProperty","ɵɵclassProp","ɵɵtextInterpolate1","i1","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\components\\stream-controls\\stream-controls.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-stream-controls',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"controls\">\r\n      <div class=\"filter-controls\">\r\n        <label for=\"classification-filter\">Filter by Classification:</label>\r\n        <select \r\n          id=\"classification-filter\" \r\n          [(ngModel)]=\"selectedClassification\"\r\n          (change)=\"onFilterChange()\">\r\n          <option value=\"\">All Targets</option>\r\n          <option value=\"hostile\">Hostile</option>\r\n          <option value=\"friendly\">Friendly</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"stream-controls\">\r\n        <button \r\n          (click)=\"onToggleStream()\" \r\n          [class.active]=\"isConnected\"\r\n          class=\"stream-btn\">\r\n          {{ isConnected ? 'Stop Stream' : 'Start Stream' }}\r\n        </button>\r\n        <button (click)=\"onClearTargets()\" class=\"clear-btn\">Clear All</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .controls {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n      padding: 15px;\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    .filter-controls {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n    }\r\n\r\n    .filter-controls label {\r\n      font-weight: 500;\r\n      color: #555;\r\n    }\r\n\r\n    .filter-controls select {\r\n      padding: 8px 12px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      background-color: white;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .stream-controls {\r\n      display: flex;\r\n      gap: 10px;\r\n    }\r\n\r\n    .stream-btn, .clear-btn {\r\n      padding: 10px 20px;\r\n      border: none;\r\n      border-radius: 6px;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .stream-btn {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n\r\n    .stream-btn:hover {\r\n      background-color: #0056b3;\r\n    }\r\n\r\n    .stream-btn.active {\r\n      background-color: #dc3545;\r\n    }\r\n\r\n    .stream-btn.active:hover {\r\n      background-color: #c82333;\r\n    }\r\n\r\n    .clear-btn {\r\n      background-color: #6c757d;\r\n      color: white;\r\n    }\r\n\r\n    .clear-btn:hover {\r\n      background-color: #545b62;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .controls {\r\n        flex-direction: column;\r\n        gap: 15px;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class StreamControlsComponent {\r\n  @Input() isConnected = false;\r\n  @Input() selectedClassification: '' | 'hostile' | 'friendly' = '';\r\n  \r\n  @Output() toggleStream = new EventEmitter<void>();\r\n  @Output() clearTargets = new EventEmitter<void>();\r\n  @Output() filterChange = new EventEmitter<'hostile' | 'friendly' | ''>();\r\n\r\n  onToggleStream(): void {\r\n    this.toggleStream.emit();\r\n  }\r\n\r\n  onClearTargets(): void {\r\n    this.clearTargets.emit();\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.filterChange.emit(this.selectedClassification);\r\n  }\r\n} "],"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;;;AA6G5C,OAAM,MAAOC,uBAAuB;EA3GpCC,YAAA;IA4GW,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,sBAAsB,GAAgC,EAAE;IAEvD,KAAAC,YAAY,GAAG,IAAIP,YAAY,EAAQ;IACvC,KAAAQ,YAAY,GAAG,IAAIR,YAAY,EAAQ;IACvC,KAAAS,YAAY,GAAG,IAAIT,YAAY,EAA+B;;EAExEU,cAAcA,CAAA;IACZ,IAAI,CAACH,YAAY,CAACI,IAAI,EAAE;EAC1B;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACJ,YAAY,CAACG,IAAI,EAAE;EAC1B;EAEAE,cAAcA,CAAA;IACZ,IAAI,CAACJ,YAAY,CAACE,IAAI,CAAC,IAAI,CAACL,sBAAsB,CAAC;EACrD;;;uBAlBWH,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAW,SAAA;MAAAC,MAAA;QAAAV,WAAA;QAAAC,sBAAA;MAAA;MAAAU,OAAA;QAAAT,YAAA;QAAAC,YAAA;QAAAC,YAAA;MAAA;MAAAQ,UAAA;MAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UApG5BP,EAFJ,CAAAS,cAAA,aAAsB,aACS,eACQ;UAAAT,EAAA,CAAAU,MAAA,gCAAyB;UAAAV,EAAA,CAAAW,YAAA,EAAQ;UACpEX,EAAA,CAAAS,cAAA,gBAG8B;UAD5BT,EAAA,CAAAY,gBAAA,2BAAAC,iEAAAC,MAAA;YAAAd,EAAA,CAAAe,kBAAA,CAAAP,GAAA,CAAArB,sBAAA,EAAA2B,MAAA,MAAAN,GAAA,CAAArB,sBAAA,GAAA2B,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAoC;UACpCd,EAAA,CAAAgB,UAAA,oBAAAC,0DAAA;YAAA,OAAUT,GAAA,CAAAd,cAAA,EAAgB;UAAA,EAAC;UAC3BM,EAAA,CAAAS,cAAA,gBAAiB;UAAAT,EAAA,CAAAU,MAAA,kBAAW;UAAAV,EAAA,CAAAW,YAAA,EAAS;UACrCX,EAAA,CAAAS,cAAA,gBAAwB;UAAAT,EAAA,CAAAU,MAAA,cAAO;UAAAV,EAAA,CAAAW,YAAA,EAAS;UACxCX,EAAA,CAAAS,cAAA,gBAAyB;UAAAT,EAAA,CAAAU,MAAA,gBAAQ;UAErCV,EAFqC,CAAAW,YAAA,EAAS,EACnC,EACL;UAGJX,EADF,CAAAS,cAAA,cAA6B,iBAIN;UAFnBT,EAAA,CAAAgB,UAAA,mBAAAE,0DAAA;YAAA,OAASV,GAAA,CAAAjB,cAAA,EAAgB;UAAA,EAAC;UAG1BS,EAAA,CAAAU,MAAA,IACF;UAAAV,EAAA,CAAAW,YAAA,EAAS;UACTX,EAAA,CAAAS,cAAA,iBAAqD;UAA7CT,EAAA,CAAAgB,UAAA,mBAAAG,0DAAA;YAAA,OAASX,GAAA,CAAAf,cAAA,EAAgB;UAAA,EAAC;UAAmBO,EAAA,CAAAU,MAAA,iBAAS;UAElEV,EAFkE,CAAAW,YAAA,EAAS,EACnE,EACF;;;UAjBAX,EAAA,CAAAoB,SAAA,GAAoC;UAApCpB,EAAA,CAAAqB,gBAAA,YAAAb,GAAA,CAAArB,sBAAA,CAAoC;UAWpCa,EAAA,CAAAoB,SAAA,GAA4B;UAA5BpB,EAAA,CAAAsB,WAAA,WAAAd,GAAA,CAAAtB,WAAA,CAA4B;UAE5Bc,EAAA,CAAAoB,SAAA,EACF;UADEpB,EAAA,CAAAuB,kBAAA,MAAAf,GAAA,CAAAtB,WAAA,uCACF;;;qBArBIJ,YAAY,EAAEC,WAAW,EAAAyC,EAAA,CAAAC,cAAA,EAAAD,EAAA,CAAAE,uBAAA,EAAAF,EAAA,CAAAG,0BAAA,EAAAH,EAAA,CAAAI,eAAA,EAAAJ,EAAA,CAAAK,OAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}