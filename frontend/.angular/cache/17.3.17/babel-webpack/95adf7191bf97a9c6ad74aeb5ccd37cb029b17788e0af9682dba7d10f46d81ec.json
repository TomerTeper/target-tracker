{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/tomer/Desktop/mini-target-tracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/target.service\";\nimport * as i3 from \"@angular/common\";\nfunction BackendTestComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.restMessage());\n  }\n}\nfunction BackendTestComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.wsMessage());\n  }\n}\nfunction BackendTestComponent_div_19_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const target_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", target_r2.name, \" - \", target_r2.classification, \" - \", target_r2.heading, \"\\u00B0 \");\n  }\n}\nfunction BackendTestComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BackendTestComponent_div_19_div_3_Template, 2, 3, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Received WebSocket Targets (\", ctx_r0.wsTargets().length, \"):\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.wsTargets().slice(0, 3));\n  }\n}\nfunction BackendTestComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.createMessage());\n  }\n}\nfunction BackendTestComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const target_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", target_r3.name, \" - \", target_r3.classification, \" - \", target_r3.heading, \"\\u00B0 \");\n  }\n}\nfunction BackendTestComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, BackendTestComponent_div_31_div_1_Template, 2, 3, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.currentTargets().slice(0, 5));\n  }\n}\nexport class BackendTestComponent {\n  constructor(http, targetService) {\n    this.http = http;\n    this.targetService = targetService;\n    // Signals\n    this.restStatusSignal = signal('idle');\n    this.wsStatusSignal = signal('idle');\n    this.isTestingSignal = signal(false);\n    this.restMessageSignal = signal('');\n    this.wsMessageSignal = signal('');\n    this.createMessageSignal = signal('');\n    this.wsTargetsSignal = signal([]);\n    this.currentTargetsSignal = signal([]);\n    // Readonly signals\n    this.restStatus = this.restStatusSignal.asReadonly();\n    this.wsStatus = this.wsStatusSignal.asReadonly();\n    this.isTesting = this.isTestingSignal.asReadonly();\n    this.restMessage = this.restMessageSignal.asReadonly();\n    this.wsMessage = this.wsMessageSignal.asReadonly();\n    this.createMessage = this.createMessageSignal.asReadonly();\n    this.wsTargets = this.wsTargetsSignal.asReadonly();\n    this.currentTargets = this.currentTargetsSignal.asReadonly();\n    // Computed signals\n    this.targetCount = computed(() => this.currentTargets().length);\n  }\n  ngOnInit() {\n    // Auto-test on component load\n    this.testRestApi();\n  }\n  ngOnDestroy() {\n    this.closeWebSocket();\n  }\n  testRestApi() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.isTestingSignal.set(true);\n      _this.restMessageSignal.set('Testing REST API...');\n      try {\n        const response = yield firstValueFrom(_this.http.get('http://localhost:8000/'));\n        _this.restStatusSignal.set('connected');\n        _this.restMessageSignal.set(`✅ Backend is running! Response: ${JSON.stringify(response)}`);\n      } catch (error) {\n        _this.restStatusSignal.set('error');\n        if (error instanceof HttpErrorResponse) {\n          _this.restMessageSignal.set(`❌ Backend connection failed: ${error.status} ${error.statusText}`);\n        } else {\n          _this.restMessageSignal.set(`❌ Backend connection failed: ${error}`);\n        }\n      } finally {\n        _this.isTestingSignal.set(false);\n      }\n    })();\n  }\n  testWebSocket() {\n    this.isTestingSignal.set(true);\n    this.wsMessageSignal.set('Testing WebSocket connection...');\n    this.closeWebSocket();\n    try {\n      this.wsConnection = new WebSocket('ws://localhost:8000/ws');\n      this.wsConnection.onopen = () => {\n        this.wsStatusSignal.set('connected');\n        this.wsMessageSignal.set('✅ WebSocket connected! Receiving targets...');\n        this.isTestingSignal.set(false);\n      };\n      this.wsConnection.onmessage = event => {\n        try {\n          const target = JSON.parse(event.data);\n          const currentTargets = this.wsTargetsSignal();\n          const updatedTargets = [target, ...currentTargets].slice(0, 10); // Keep last 10\n          this.wsTargetsSignal.set(updatedTargets);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      this.wsConnection.onerror = error => {\n        this.wsStatusSignal.set('error');\n        this.wsMessageSignal.set('❌ WebSocket connection failed');\n        this.isTestingSignal.set(false);\n      };\n      this.wsConnection.onclose = () => {\n        this.wsStatusSignal.set('idle');\n        this.wsMessageSignal.set('WebSocket connection closed');\n      };\n    } catch (error) {\n      this.wsStatusSignal.set('error');\n      this.wsMessageSignal.set(`❌ WebSocket connection failed: ${error}`);\n      this.isTestingSignal.set(false);\n    }\n  }\n  createTestTargets() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.isTestingSignal.set(true);\n      _this2.createMessageSignal.set('Creating test targets...');\n      const testTargets = [{\n        id: 'test-1',\n        name: 'Test-Target-1',\n        heading: 45,\n        timestamp: new Date().toISOString(),\n        classification: 'hostile'\n      }, {\n        id: 'test-2',\n        name: 'Test-Target-2',\n        heading: 180,\n        timestamp: new Date().toISOString(),\n        classification: 'friendly'\n      }, {\n        id: 'test-3',\n        name: 'Test-Target-3',\n        heading: 270,\n        timestamp: new Date().toISOString(),\n        classification: 'hostile'\n      }];\n      try {\n        const response = yield firstValueFrom(_this2.targetService.addTargets(testTargets));\n        _this2.createMessageSignal.set(`✅ Created ${testTargets.length} test targets!`);\n        _this2.loadTargets(); // Refresh the targets list\n      } catch (error) {\n        _this2.createMessageSignal.set(`❌ Failed to create targets: ${error}`);\n      } finally {\n        _this2.isTestingSignal.set(false);\n      }\n    })();\n  }\n  loadTargets() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.isTestingSignal.set(true);\n      try {\n        const response = yield _this3.targetService.getTargets().toPromise();\n        _this3.currentTargetsSignal.set(response?.targets || []);\n      } catch (error) {\n        console.error('Error loading targets:', error);\n      } finally {\n        _this3.isTestingSignal.set(false);\n      }\n    })();\n  }\n  closeWebSocket() {\n    if (this.wsConnection) {\n      this.wsConnection.close();\n      this.wsConnection = undefined;\n    }\n  }\n  static {\n    this.ɵfac = function BackendTestComponent_Factory(t) {\n      return new (t || BackendTestComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.TargetService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BackendTestComponent,\n      selectors: [[\"app-backend-test\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 32,\n      vars: 20,\n      consts: [[1, \"backend-test\"], [1, \"test-section\"], [1, \"status-indicator\"], [3, \"click\", \"disabled\"], [\"class\", \"message\", 4, \"ngIf\"], [\"class\", \"ws-targets\", 4, \"ngIf\"], [\"class\", \"targets-list\", 4, \"ngIf\"], [1, \"message\"], [1, \"ws-targets\"], [\"class\", \"target-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"target-item\"], [1, \"targets-list\"]],\n      template: function BackendTestComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Backend Connection Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h4\");\n          i0.ɵɵtext(5, \"REST API Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 2);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function BackendTestComponent_Template_button_click_8_listener() {\n            return ctx.testRestApi();\n          });\n          i0.ɵɵtext(9, \"Test REST API\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, BackendTestComponent_div_10_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 1)(12, \"h4\");\n          i0.ɵɵtext(13, \"WebSocket Test\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 2);\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function BackendTestComponent_Template_button_click_16_listener() {\n            return ctx.testWebSocket();\n          });\n          i0.ɵɵtext(17, \"Test WebSocket\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, BackendTestComponent_div_18_Template, 2, 1, \"div\", 4)(19, BackendTestComponent_div_19_Template, 4, 2, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 1)(21, \"h4\");\n          i0.ɵɵtext(22, \"Create Test Targets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function BackendTestComponent_Template_button_click_23_listener() {\n            return ctx.createTestTargets();\n          });\n          i0.ɵɵtext(24, \"Create 3 Test Targets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(25, BackendTestComponent_div_25_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 1)(27, \"h4\");\n          i0.ɵɵtext(28);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function BackendTestComponent_Template_button_click_29_listener() {\n            return ctx.loadTargets();\n          });\n          i0.ɵɵtext(30, \"Load Targets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(31, BackendTestComponent_div_31_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"connected\", ctx.restStatus() === \"connected\")(\"error\", ctx.restStatus() === \"error\");\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" Status: \", ctx.restStatus(), \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isTesting());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.restMessage());\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"connected\", ctx.wsStatus() === \"connected\")(\"error\", ctx.wsStatus() === \"error\");\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" Status: \", ctx.wsStatus(), \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isTesting());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.wsMessage());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.wsTargets().length > 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.isTesting());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.createMessage());\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Current Targets (\", ctx.targetCount(), \")\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isTesting());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentTargets().length > 0);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf],\n      styles: [\".backend-test[_ngcontent-%COMP%] {\\n      padding: 20px;\\n      max-width: 600px;\\n      margin: 0 auto;\\n    }\\n\\n    .test-section[_ngcontent-%COMP%] {\\n      margin-bottom: 30px;\\n      padding: 15px;\\n      border: 1px solid #ddd;\\n      border-radius: 8px;\\n      background: #f9f9f9;\\n    }\\n\\n    .status-indicator[_ngcontent-%COMP%] {\\n      padding: 8px 12px;\\n      border-radius: 4px;\\n      margin-bottom: 10px;\\n      font-weight: bold;\\n    }\\n\\n    .status-indicator.connected[_ngcontent-%COMP%] {\\n      background: #d4edda;\\n      color: #155724;\\n      border: 1px solid #c3e6cb;\\n    }\\n\\n    .status-indicator.error[_ngcontent-%COMP%] {\\n      background: #f8d7da;\\n      color: #721c24;\\n      border: 1px solid #f5c6cb;\\n    }\\n\\n    .status-indicator[_ngcontent-%COMP%]:not(.connected):not(.error) {\\n      background: #fff3cd;\\n      color: #856404;\\n      border: 1px solid #ffeaa7;\\n    }\\n\\n    button[_ngcontent-%COMP%] {\\n      background: #007bff;\\n      color: white;\\n      border: none;\\n      padding: 8px 16px;\\n      border-radius: 4px;\\n      cursor: pointer;\\n      margin-right: 10px;\\n    }\\n\\n    button[_ngcontent-%COMP%]:hover:not(:disabled) {\\n      background: #0056b3;\\n    }\\n\\n    button[_ngcontent-%COMP%]:disabled {\\n      background: #6c757d;\\n      cursor: not-allowed;\\n    }\\n\\n    .message[_ngcontent-%COMP%] {\\n      margin-top: 10px;\\n      padding: 8px;\\n      border-radius: 4px;\\n      background: #e2e3e5;\\n      color: #383d41;\\n    }\\n\\n    .target-item[_ngcontent-%COMP%] {\\n      padding: 5px 0;\\n      border-bottom: 1px solid #eee;\\n    }\\n\\n    .targets-list[_ngcontent-%COMP%] {\\n      margin-top: 10px;\\n    }\\n\\n    .ws-targets[_ngcontent-%COMP%] {\\n      margin-top: 10px;\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9iYWNrZW5kLXRlc3QvYmFja2VuZC10ZXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7TUFDRSxhQUFhO01BQ2IsZ0JBQWdCO01BQ2hCLGNBQWM7SUFDaEI7O0lBRUE7TUFDRSxtQkFBbUI7TUFDbkIsYUFBYTtNQUNiLHNCQUFzQjtNQUN0QixrQkFBa0I7TUFDbEIsbUJBQW1CO0lBQ3JCOztJQUVBO01BQ0UsaUJBQWlCO01BQ2pCLGtCQUFrQjtNQUNsQixtQkFBbUI7TUFDbkIsaUJBQWlCO0lBQ25COztJQUVBO01BQ0UsbUJBQW1CO01BQ25CLGNBQWM7TUFDZCx5QkFBeUI7SUFDM0I7O0lBRUE7TUFDRSxtQkFBbUI7TUFDbkIsY0FBYztNQUNkLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLG1CQUFtQjtNQUNuQixjQUFjO01BQ2QseUJBQXlCO0lBQzNCOztJQUVBO01BQ0UsbUJBQW1CO01BQ25CLFlBQVk7TUFDWixZQUFZO01BQ1osaUJBQWlCO01BQ2pCLGtCQUFrQjtNQUNsQixlQUFlO01BQ2Ysa0JBQWtCO0lBQ3BCOztJQUVBO01BQ0UsbUJBQW1CO0lBQ3JCOztJQUVBO01BQ0UsbUJBQW1CO01BQ25CLG1CQUFtQjtJQUNyQjs7SUFFQTtNQUNFLGdCQUFnQjtNQUNoQixZQUFZO01BQ1osa0JBQWtCO01BQ2xCLG1CQUFtQjtNQUNuQixjQUFjO0lBQ2hCOztJQUVBO01BQ0UsY0FBYztNQUNkLDZCQUE2QjtJQUMvQjs7SUFFQTtNQUNFLGdCQUFnQjtJQUNsQjs7SUFFQTtNQUNFLGdCQUFnQjtJQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5iYWNrZW5kLXRlc3Qge1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG5cbiAgICAudGVzdC1zZWN0aW9uIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIGJhY2tncm91bmQ6ICNmOWY5Zjk7XG4gICAgfVxuXG4gICAgLnN0YXR1cy1pbmRpY2F0b3Ige1xuICAgICAgcGFkZGluZzogOHB4IDEycHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuXG4gICAgLnN0YXR1cy1pbmRpY2F0b3IuY29ubmVjdGVkIHtcbiAgICAgIGJhY2tncm91bmQ6ICNkNGVkZGE7XG4gICAgICBjb2xvcjogIzE1NTcyNDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjM2U2Y2I7XG4gICAgfVxuXG4gICAgLnN0YXR1cy1pbmRpY2F0b3IuZXJyb3Ige1xuICAgICAgYmFja2dyb3VuZDogI2Y4ZDdkYTtcbiAgICAgIGNvbG9yOiAjNzIxYzI0O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2Y1YzZjYjtcbiAgICB9XG5cbiAgICAuc3RhdHVzLWluZGljYXRvcjpub3QoLmNvbm5lY3RlZCk6bm90KC5lcnJvcikge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjNjZDtcbiAgICAgIGNvbG9yOiAjODU2NDA0O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZWFhNztcbiAgICB9XG5cbiAgICBidXR0b24ge1xuICAgICAgYmFja2dyb3VuZDogIzAwN2JmZjtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDhweCAxNnB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIH1cblxuICAgIGJ1dHRvbjpob3Zlcjpub3QoOmRpc2FibGVkKSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDA1NmIzO1xuICAgIH1cblxuICAgIGJ1dHRvbjpkaXNhYmxlZCB7XG4gICAgICBiYWNrZ3JvdW5kOiAjNmM3NTdkO1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICB9XG5cbiAgICAubWVzc2FnZSB7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgYmFja2dyb3VuZDogI2UyZTNlNTtcbiAgICAgIGNvbG9yOiAjMzgzZDQxO1xuICAgIH1cblxuICAgIC50YXJnZXQtaXRlbSB7XG4gICAgICBwYWRkaW5nOiA1cHggMDtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xuICAgIH1cblxuICAgIC50YXJnZXRzLWxpc3Qge1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB9XG5cbiAgICAud3MtdGFyZ2V0cyB7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["signal","computed","CommonModule","HttpErrorResponse","firstValueFrom","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","restMessage","wsMessage","ɵɵtextInterpolate3","target_r2","name","classification","heading","ɵɵtemplate","BackendTestComponent_div_19_div_3_Template","ɵɵtextInterpolate1","wsTargets","length","ɵɵproperty","slice","createMessage","target_r3","BackendTestComponent_div_31_div_1_Template","currentTargets","BackendTestComponent","constructor","http","targetService","restStatusSignal","wsStatusSignal","isTestingSignal","restMessageSignal","wsMessageSignal","createMessageSignal","wsTargetsSignal","currentTargetsSignal","restStatus","asReadonly","wsStatus","isTesting","targetCount","ngOnInit","testRestApi","ngOnDestroy","closeWebSocket","_this","_asyncToGenerator","set","response","get","JSON","stringify","error","status","statusText","testWebSocket","wsConnection","WebSocket","onopen","onmessage","event","target","parse","data","updatedTargets","console","onerror","onclose","createTestTargets","_this2","testTargets","id","timestamp","Date","toISOString","addTargets","loadTargets","_this3","getTargets","toPromise","targets","close","undefined","ɵɵdirectiveInject","i1","HttpClient","i2","TargetService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BackendTestComponent_Template","rf","ctx","ɵɵlistener","BackendTestComponent_Template_button_click_8_listener","BackendTestComponent_div_10_Template","BackendTestComponent_Template_button_click_16_listener","BackendTestComponent_div_18_Template","BackendTestComponent_div_19_Template","BackendTestComponent_Template_button_click_23_listener","BackendTestComponent_div_25_Template","BackendTestComponent_Template_button_click_29_listener","BackendTestComponent_div_31_Template","ɵɵclassProp","i3","NgForOf","NgIf","styles"],"sources":["C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\components\\backend-test\\backend-test.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, signal, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { TargetService } from '../../services/target.service';\r\nimport { Target } from '../../models/target.model';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-backend-test',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"backend-test\">\r\n      <h3>Backend Connection Test</h3>\r\n      \r\n      <!-- REST API Test -->\r\n      <div class=\"test-section\">\r\n        <h4>REST API Test</h4>\r\n        <div class=\"status-indicator\" [class.connected]=\"restStatus() === 'connected'\" [class.error]=\"restStatus() === 'error'\">\r\n          Status: {{ restStatus() }}\r\n        </div>\r\n        <button (click)=\"testRestApi()\" [disabled]=\"isTesting()\">Test REST API</button>\r\n        <div *ngIf=\"restMessage()\" class=\"message\">{{ restMessage() }}</div>\r\n      </div>\r\n\r\n      <!-- WebSocket Test -->\r\n      <div class=\"test-section\">\r\n        <h4>WebSocket Test</h4>\r\n        <div class=\"status-indicator\" [class.connected]=\"wsStatus() === 'connected'\" [class.error]=\"wsStatus() === 'error'\">\r\n          Status: {{ wsStatus() }}\r\n        </div>\r\n        <button (click)=\"testWebSocket()\" [disabled]=\"isTesting()\">Test WebSocket</button>\r\n        <div *ngIf=\"wsMessage()\" class=\"message\">{{ wsMessage() }}</div>\r\n        <div *ngIf=\"wsTargets().length > 0\" class=\"ws-targets\">\r\n          <h5>Received WebSocket Targets ({{ wsTargets().length }}):</h5>\r\n          <div *ngFor=\"let target of wsTargets().slice(0, 3)\" class=\"target-item\">\r\n            {{ target.name }} - {{ target.classification }} - {{ target.heading }}°\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Manual Target Creation Test -->\r\n      <div class=\"test-section\">\r\n        <h4>Create Test Targets</h4>\r\n        <button (click)=\"createTestTargets()\" [disabled]=\"isTesting()\">Create 3 Test Targets</button>\r\n        <div *ngIf=\"createMessage()\" class=\"message\">{{ createMessage() }}</div>\r\n      </div>\r\n\r\n      <!-- Current Targets -->\r\n      <div class=\"test-section\">\r\n        <h4>Current Targets ({{ targetCount() }})</h4>\r\n        <button (click)=\"loadTargets()\" [disabled]=\"isTesting()\">Load Targets</button>\r\n        <div *ngIf=\"currentTargets().length > 0\" class=\"targets-list\">\r\n          <div *ngFor=\"let target of currentTargets().slice(0, 5)\" class=\"target-item\">\r\n            {{ target.name }} - {{ target.classification }} - {{ target.heading }}°\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .backend-test {\r\n      padding: 20px;\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .test-section {\r\n      margin-bottom: 30px;\r\n      padding: 15px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 8px;\r\n      background: #f9f9f9;\r\n    }\r\n\r\n    .status-indicator {\r\n      padding: 8px 12px;\r\n      border-radius: 4px;\r\n      margin-bottom: 10px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .status-indicator.connected {\r\n      background: #d4edda;\r\n      color: #155724;\r\n      border: 1px solid #c3e6cb;\r\n    }\r\n\r\n    .status-indicator.error {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n      border: 1px solid #f5c6cb;\r\n    }\r\n\r\n    .status-indicator:not(.connected):not(.error) {\r\n      background: #fff3cd;\r\n      color: #856404;\r\n      border: 1px solid #ffeaa7;\r\n    }\r\n\r\n    button {\r\n      background: #007bff;\r\n      color: white;\r\n      border: none;\r\n      padding: 8px 16px;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      margin-right: 10px;\r\n    }\r\n\r\n    button:hover:not(:disabled) {\r\n      background: #0056b3;\r\n    }\r\n\r\n    button:disabled {\r\n      background: #6c757d;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    .message {\r\n      margin-top: 10px;\r\n      padding: 8px;\r\n      border-radius: 4px;\r\n      background: #e2e3e5;\r\n      color: #383d41;\r\n    }\r\n\r\n    .target-item {\r\n      padding: 5px 0;\r\n      border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .targets-list {\r\n      margin-top: 10px;\r\n    }\r\n\r\n    .ws-targets {\r\n      margin-top: 10px;\r\n    }\r\n  `]\r\n})\r\nexport class BackendTestComponent implements OnInit, OnDestroy {\r\n  // Signals\r\n  private restStatusSignal = signal<'idle' | 'connected' | 'error'>('idle');\r\n  private wsStatusSignal = signal<'idle' | 'connected' | 'error'>('idle');\r\n  private isTestingSignal = signal<boolean>(false);\r\n  private restMessageSignal = signal<string>('');\r\n  private wsMessageSignal = signal<string>('');\r\n  private createMessageSignal = signal<string>('');\r\n  private wsTargetsSignal = signal<Target[]>([]);\r\n  private currentTargetsSignal = signal<Target[]>([]);\r\n\r\n  // Readonly signals\r\n  public restStatus = this.restStatusSignal.asReadonly();\r\n  public wsStatus = this.wsStatusSignal.asReadonly();\r\n  public isTesting = this.isTestingSignal.asReadonly();\r\n  public restMessage = this.restMessageSignal.asReadonly();\r\n  public wsMessage = this.wsMessageSignal.asReadonly();\r\n  public createMessage = this.createMessageSignal.asReadonly();\r\n  public wsTargets = this.wsTargetsSignal.asReadonly();\r\n  public currentTargets = this.currentTargetsSignal.asReadonly();\r\n\r\n  // Computed signals\r\n  public targetCount = computed(() => this.currentTargets().length);\r\n\r\n  private wsConnection?: WebSocket;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private targetService: TargetService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Auto-test on component load\r\n    this.testRestApi();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.closeWebSocket();\r\n  }\r\n\r\n  async testRestApi() {\r\n    this.isTestingSignal.set(true);\r\n    this.restMessageSignal.set('Testing REST API...');\r\n    \r\n    try {\r\n      const response = await firstValueFrom(this.http.get('http://localhost:8000/'));\r\n      this.restStatusSignal.set('connected');\r\n      this.restMessageSignal.set(`✅ Backend is running! Response: ${JSON.stringify(response)}`);\r\n    } catch (error) {\r\n      this.restStatusSignal.set('error');\r\n      if (error instanceof HttpErrorResponse) {\r\n        this.restMessageSignal.set(`❌ Backend connection failed: ${error.status} ${error.statusText}`);\r\n      } else {\r\n        this.restMessageSignal.set(`❌ Backend connection failed: ${error}`);\r\n      }\r\n    } finally {\r\n      this.isTestingSignal.set(false);\r\n    }\r\n  }\r\n\r\n  testWebSocket() {\r\n    this.isTestingSignal.set(true);\r\n    this.wsMessageSignal.set('Testing WebSocket connection...');\r\n    this.closeWebSocket();\r\n\r\n    try {\r\n      this.wsConnection = new WebSocket('ws://localhost:8000/ws');\r\n      \r\n      this.wsConnection.onopen = () => {\r\n        this.wsStatusSignal.set('connected');\r\n        this.wsMessageSignal.set('✅ WebSocket connected! Receiving targets...');\r\n        this.isTestingSignal.set(false);\r\n      };\r\n\r\n      this.wsConnection.onmessage = (event) => {\r\n        try {\r\n          const target = JSON.parse(event.data);\r\n          const currentTargets = this.wsTargetsSignal();\r\n          const updatedTargets = [target, ...currentTargets].slice(0, 10); // Keep last 10\r\n          this.wsTargetsSignal.set(updatedTargets);\r\n        } catch (error) {\r\n          console.error('Error parsing WebSocket message:', error);\r\n        }\r\n      };\r\n\r\n      this.wsConnection.onerror = (error) => {\r\n        this.wsStatusSignal.set('error');\r\n        this.wsMessageSignal.set('❌ WebSocket connection failed');\r\n        this.isTestingSignal.set(false);\r\n      };\r\n\r\n      this.wsConnection.onclose = () => {\r\n        this.wsStatusSignal.set('idle');\r\n        this.wsMessageSignal.set('WebSocket connection closed');\r\n      };\r\n\r\n    } catch (error) {\r\n      this.wsStatusSignal.set('error');\r\n      this.wsMessageSignal.set(`❌ WebSocket connection failed: ${error}`);\r\n      this.isTestingSignal.set(false);\r\n    }\r\n  }\r\n\r\n  async createTestTargets() {\r\n    this.isTestingSignal.set(true);\r\n    this.createMessageSignal.set('Creating test targets...');\r\n\r\n    const testTargets: Target[] = [\r\n      {\r\n        id: 'test-1',\r\n        name: 'Test-Target-1',\r\n        heading: 45,\r\n        timestamp: new Date().toISOString(),\r\n        classification: 'hostile'\r\n      },\r\n      {\r\n        id: 'test-2',\r\n        name: 'Test-Target-2',\r\n        heading: 180,\r\n        timestamp: new Date().toISOString(),\r\n        classification: 'friendly'\r\n      },\r\n      {\r\n        id: 'test-3',\r\n        name: 'Test-Target-3',\r\n        heading: 270,\r\n        timestamp: new Date().toISOString(),\r\n        classification: 'hostile'\r\n      }\r\n    ];\r\n\r\n    try {\r\n      const response = await firstValueFrom(this.targetService.addTargets(testTargets));\r\n      this.createMessageSignal.set(`✅ Created ${testTargets.length} test targets!`);\r\n      this.loadTargets(); // Refresh the targets list\r\n    } catch (error) {\r\n      this.createMessageSignal.set(`❌ Failed to create targets: ${error}`);\r\n    } finally {\r\n      this.isTestingSignal.set(false);\r\n    }\r\n  }\r\n\r\n  async loadTargets() {\r\n    this.isTestingSignal.set(true);\r\n    \r\n    try {\r\n      const response = await this.targetService.getTargets().toPromise();\r\n      this.currentTargetsSignal.set(response?.targets || []);\r\n    } catch (error) {\r\n      console.error('Error loading targets:', error);\r\n    } finally {\r\n      this.isTestingSignal.set(false);\r\n    }\r\n  }\r\n\r\n  private closeWebSocket() {\r\n    if (this.wsConnection) {\r\n      this.wsConnection.close();\r\n      this.wsConnection = undefined;\r\n    }\r\n  }\r\n} "],"mappings":";AAAA,SAAuCA,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAC9E,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAAqBC,iBAAiB,QAAQ,sBAAsB;AAGpE,SAASC,cAAc,QAAQ,MAAM;;;;;;;IAiB7BC,EAAA,CAAAC,cAAA,aAA2C;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAzBH,EAAA,CAAAI,SAAA,EAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,WAAA,GAAmB;;;;;IAU9DP,EAAA,CAAAC,cAAA,aAAyC;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAvBH,EAAA,CAAAI,SAAA,EAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAE,SAAA,GAAiB;;;;;IAGxDR,EAAA,CAAAC,cAAA,cAAwE;IACtED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAS,kBAAA,MAAAC,SAAA,CAAAC,IAAA,SAAAD,SAAA,CAAAE,cAAA,SAAAF,SAAA,CAAAG,OAAA,YACF;;;;;IAHAb,EADF,CAAAC,cAAA,aAAuD,SACjD;IAAAD,EAAA,CAAAE,MAAA,GAAsD;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/DH,EAAA,CAAAc,UAAA,IAAAC,0CAAA,iBAAwE;IAG1Ef,EAAA,CAAAG,YAAA,EAAM;;;;IAJAH,EAAA,CAAAI,SAAA,GAAsD;IAAtDJ,EAAA,CAAAgB,kBAAA,iCAAAV,MAAA,CAAAW,SAAA,GAAAC,MAAA,OAAsD;IAClClB,EAAA,CAAAI,SAAA,EAA0B;IAA1BJ,EAAA,CAAAmB,UAAA,YAAAb,MAAA,CAAAW,SAAA,GAAAG,KAAA,OAA0B;;;;;IAUpDpB,EAAA,CAAAC,cAAA,aAA6C;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAA3BH,EAAA,CAAAI,SAAA,EAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAe,aAAA,GAAqB;;;;;IAQhErB,EAAA,CAAAC,cAAA,cAA6E;IAC3ED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAS,kBAAA,MAAAa,SAAA,CAAAX,IAAA,SAAAW,SAAA,CAAAV,cAAA,SAAAU,SAAA,CAAAT,OAAA,YACF;;;;;IAHFb,EAAA,CAAAC,cAAA,cAA8D;IAC5DD,EAAA,CAAAc,UAAA,IAAAS,0CAAA,iBAA6E;IAG/EvB,EAAA,CAAAG,YAAA,EAAM;;;;IAHoBH,EAAA,CAAAI,SAAA,EAA+B;IAA/BJ,EAAA,CAAAmB,UAAA,YAAAb,MAAA,CAAAkB,cAAA,GAAAJ,KAAA,OAA+B;;;AAwFjE,OAAM,MAAOK,oBAAoB;EA0B/BC,YACUC,IAAgB,EAChBC,aAA4B;IAD5B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,aAAa,GAAbA,aAAa;IA3BvB;IACQ,KAAAC,gBAAgB,GAAGlC,MAAM,CAAiC,MAAM,CAAC;IACjE,KAAAmC,cAAc,GAAGnC,MAAM,CAAiC,MAAM,CAAC;IAC/D,KAAAoC,eAAe,GAAGpC,MAAM,CAAU,KAAK,CAAC;IACxC,KAAAqC,iBAAiB,GAAGrC,MAAM,CAAS,EAAE,CAAC;IACtC,KAAAsC,eAAe,GAAGtC,MAAM,CAAS,EAAE,CAAC;IACpC,KAAAuC,mBAAmB,GAAGvC,MAAM,CAAS,EAAE,CAAC;IACxC,KAAAwC,eAAe,GAAGxC,MAAM,CAAW,EAAE,CAAC;IACtC,KAAAyC,oBAAoB,GAAGzC,MAAM,CAAW,EAAE,CAAC;IAEnD;IACO,KAAA0C,UAAU,GAAG,IAAI,CAACR,gBAAgB,CAACS,UAAU,EAAE;IAC/C,KAAAC,QAAQ,GAAG,IAAI,CAACT,cAAc,CAACQ,UAAU,EAAE;IAC3C,KAAAE,SAAS,GAAG,IAAI,CAACT,eAAe,CAACO,UAAU,EAAE;IAC7C,KAAA/B,WAAW,GAAG,IAAI,CAACyB,iBAAiB,CAACM,UAAU,EAAE;IACjD,KAAA9B,SAAS,GAAG,IAAI,CAACyB,eAAe,CAACK,UAAU,EAAE;IAC7C,KAAAjB,aAAa,GAAG,IAAI,CAACa,mBAAmB,CAACI,UAAU,EAAE;IACrD,KAAArB,SAAS,GAAG,IAAI,CAACkB,eAAe,CAACG,UAAU,EAAE;IAC7C,KAAAd,cAAc,GAAG,IAAI,CAACY,oBAAoB,CAACE,UAAU,EAAE;IAE9D;IACO,KAAAG,WAAW,GAAG7C,QAAQ,CAAC,MAAM,IAAI,CAAC4B,cAAc,EAAE,CAACN,MAAM,CAAC;EAO9D;EAEHwB,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACC,cAAc,EAAE;EACvB;EAEMF,WAAWA,CAAA;IAAA,IAAAG,KAAA;IAAA,OAAAC,iBAAA;MACfD,KAAI,CAACf,eAAe,CAACiB,GAAG,CAAC,IAAI,CAAC;MAC9BF,KAAI,CAACd,iBAAiB,CAACgB,GAAG,CAAC,qBAAqB,CAAC;MAEjD,IAAI;QACF,MAAMC,QAAQ,SAASlD,cAAc,CAAC+C,KAAI,CAACnB,IAAI,CAACuB,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC9EJ,KAAI,CAACjB,gBAAgB,CAACmB,GAAG,CAAC,WAAW,CAAC;QACtCF,KAAI,CAACd,iBAAiB,CAACgB,GAAG,CAAC,mCAAmCG,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,EAAE,CAAC;OAC1F,CAAC,OAAOI,KAAK,EAAE;QACdP,KAAI,CAACjB,gBAAgB,CAACmB,GAAG,CAAC,OAAO,CAAC;QAClC,IAAIK,KAAK,YAAYvD,iBAAiB,EAAE;UACtCgD,KAAI,CAACd,iBAAiB,CAACgB,GAAG,CAAC,gCAAgCK,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,UAAU,EAAE,CAAC;SAC/F,MAAM;UACLT,KAAI,CAACd,iBAAiB,CAACgB,GAAG,CAAC,gCAAgCK,KAAK,EAAE,CAAC;;OAEtE,SAAS;QACRP,KAAI,CAACf,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;;IAChC;EACH;EAEAQ,aAAaA,CAAA;IACX,IAAI,CAACzB,eAAe,CAACiB,GAAG,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACf,eAAe,CAACe,GAAG,CAAC,iCAAiC,CAAC;IAC3D,IAAI,CAACH,cAAc,EAAE;IAErB,IAAI;MACF,IAAI,CAACY,YAAY,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;MAE3D,IAAI,CAACD,YAAY,CAACE,MAAM,GAAG,MAAK;QAC9B,IAAI,CAAC7B,cAAc,CAACkB,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAACf,eAAe,CAACe,GAAG,CAAC,6CAA6C,CAAC;QACvE,IAAI,CAACjB,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;MACjC,CAAC;MAED,IAAI,CAACS,YAAY,CAACG,SAAS,GAAIC,KAAK,IAAI;QACtC,IAAI;UACF,MAAMC,MAAM,GAAGX,IAAI,CAACY,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC;UACrC,MAAMxC,cAAc,GAAG,IAAI,CAACW,eAAe,EAAE;UAC7C,MAAM8B,cAAc,GAAG,CAACH,MAAM,EAAE,GAAGtC,cAAc,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACjE,IAAI,CAACe,eAAe,CAACa,GAAG,CAACiB,cAAc,CAAC;SACzC,CAAC,OAAOZ,KAAK,EAAE;UACda,OAAO,CAACb,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;;MAE5D,CAAC;MAED,IAAI,CAACI,YAAY,CAACU,OAAO,GAAId,KAAK,IAAI;QACpC,IAAI,CAACvB,cAAc,CAACkB,GAAG,CAAC,OAAO,CAAC;QAChC,IAAI,CAACf,eAAe,CAACe,GAAG,CAAC,+BAA+B,CAAC;QACzD,IAAI,CAACjB,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;MACjC,CAAC;MAED,IAAI,CAACS,YAAY,CAACW,OAAO,GAAG,MAAK;QAC/B,IAAI,CAACtC,cAAc,CAACkB,GAAG,CAAC,MAAM,CAAC;QAC/B,IAAI,CAACf,eAAe,CAACe,GAAG,CAAC,6BAA6B,CAAC;MACzD,CAAC;KAEF,CAAC,OAAOK,KAAK,EAAE;MACd,IAAI,CAACvB,cAAc,CAACkB,GAAG,CAAC,OAAO,CAAC;MAChC,IAAI,CAACf,eAAe,CAACe,GAAG,CAAC,kCAAkCK,KAAK,EAAE,CAAC;MACnE,IAAI,CAACtB,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;;EAEnC;EAEMqB,iBAAiBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAvB,iBAAA;MACrBuB,MAAI,CAACvC,eAAe,CAACiB,GAAG,CAAC,IAAI,CAAC;MAC9BsB,MAAI,CAACpC,mBAAmB,CAACc,GAAG,CAAC,0BAA0B,CAAC;MAExD,MAAMuB,WAAW,GAAa,CAC5B;QACEC,EAAE,EAAE,QAAQ;QACZ7D,IAAI,EAAE,eAAe;QACrBE,OAAO,EAAE,EAAE;QACX4D,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnC/D,cAAc,EAAE;OACjB,EACD;QACE4D,EAAE,EAAE,QAAQ;QACZ7D,IAAI,EAAE,eAAe;QACrBE,OAAO,EAAE,GAAG;QACZ4D,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnC/D,cAAc,EAAE;OACjB,EACD;QACE4D,EAAE,EAAE,QAAQ;QACZ7D,IAAI,EAAE,eAAe;QACrBE,OAAO,EAAE,GAAG;QACZ4D,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnC/D,cAAc,EAAE;OACjB,CACF;MAED,IAAI;QACF,MAAMqC,QAAQ,SAASlD,cAAc,CAACuE,MAAI,CAAC1C,aAAa,CAACgD,UAAU,CAACL,WAAW,CAAC,CAAC;QACjFD,MAAI,CAACpC,mBAAmB,CAACc,GAAG,CAAC,aAAauB,WAAW,CAACrD,MAAM,gBAAgB,CAAC;QAC7EoD,MAAI,CAACO,WAAW,EAAE,CAAC,CAAC;OACrB,CAAC,OAAOxB,KAAK,EAAE;QACdiB,MAAI,CAACpC,mBAAmB,CAACc,GAAG,CAAC,+BAA+BK,KAAK,EAAE,CAAC;OACrE,SAAS;QACRiB,MAAI,CAACvC,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;;IAChC;EACH;EAEM6B,WAAWA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAA/B,iBAAA;MACf+B,MAAI,CAAC/C,eAAe,CAACiB,GAAG,CAAC,IAAI,CAAC;MAE9B,IAAI;QACF,MAAMC,QAAQ,SAAS6B,MAAI,CAAClD,aAAa,CAACmD,UAAU,EAAE,CAACC,SAAS,EAAE;QAClEF,MAAI,CAAC1C,oBAAoB,CAACY,GAAG,CAACC,QAAQ,EAAEgC,OAAO,IAAI,EAAE,CAAC;OACvD,CAAC,OAAO5B,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;OAC/C,SAAS;QACRyB,MAAI,CAAC/C,eAAe,CAACiB,GAAG,CAAC,KAAK,CAAC;;IAChC;EACH;EAEQH,cAAcA,CAAA;IACpB,IAAI,IAAI,CAACY,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAACyB,KAAK,EAAE;MACzB,IAAI,CAACzB,YAAY,GAAG0B,SAAS;;EAEjC;;;uBAhKW1D,oBAAoB,EAAAzB,EAAA,CAAAoF,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAtF,EAAA,CAAAoF,iBAAA,CAAAG,EAAA,CAAAC,aAAA;IAAA;EAAA;;;YAApB/D,oBAAoB;MAAAgE,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA3F,EAAA,CAAA4F,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAhI3BlG,EADF,CAAAC,cAAA,aAA0B,SACpB;UAAAD,EAAA,CAAAE,MAAA,8BAAuB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAI9BH,EADF,CAAAC,cAAA,aAA0B,SACpB;UAAAD,EAAA,CAAAE,MAAA,oBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACtBH,EAAA,CAAAC,cAAA,aAAwH;UACtHD,EAAA,CAAAE,MAAA,GACF;UAAAF,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAC,cAAA,gBAAyD;UAAjDD,EAAA,CAAAoG,UAAA,mBAAAC,sDAAA;YAAA,OAASF,GAAA,CAAAxD,WAAA,EAAa;UAAA,EAAC;UAA0B3C,EAAA,CAAAE,MAAA,oBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAC/EH,EAAA,CAAAc,UAAA,KAAAwF,oCAAA,iBAA2C;UAC7CtG,EAAA,CAAAG,YAAA,EAAM;UAIJH,EADF,CAAAC,cAAA,cAA0B,UACpB;UAAAD,EAAA,CAAAE,MAAA,sBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACvBH,EAAA,CAAAC,cAAA,cAAoH;UAClHD,EAAA,CAAAE,MAAA,IACF;UAAAF,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAC,cAAA,iBAA2D;UAAnDD,EAAA,CAAAoG,UAAA,mBAAAG,uDAAA;YAAA,OAASJ,GAAA,CAAA3C,aAAA,EAAe;UAAA,EAAC;UAA0BxD,EAAA,CAAAE,MAAA,sBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAElFH,EADA,CAAAc,UAAA,KAAA0F,oCAAA,iBAAyC,KAAAC,oCAAA,iBACc;UAMzDzG,EAAA,CAAAG,YAAA,EAAM;UAIJH,EADF,CAAAC,cAAA,cAA0B,UACpB;UAAAD,EAAA,CAAAE,MAAA,2BAAmB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC5BH,EAAA,CAAAC,cAAA,iBAA+D;UAAvDD,EAAA,CAAAoG,UAAA,mBAAAM,uDAAA;YAAA,OAASP,GAAA,CAAA9B,iBAAA,EAAmB;UAAA,EAAC;UAA0BrE,EAAA,CAAAE,MAAA,6BAAqB;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAC7FH,EAAA,CAAAc,UAAA,KAAA6F,oCAAA,iBAA6C;UAC/C3G,EAAA,CAAAG,YAAA,EAAM;UAIJH,EADF,CAAAC,cAAA,cAA0B,UACpB;UAAAD,EAAA,CAAAE,MAAA,IAAqC;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC9CH,EAAA,CAAAC,cAAA,iBAAyD;UAAjDD,EAAA,CAAAoG,UAAA,mBAAAQ,uDAAA;YAAA,OAAST,GAAA,CAAAtB,WAAA,EAAa;UAAA,EAAC;UAA0B7E,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAC9EH,EAAA,CAAAc,UAAA,KAAA+F,oCAAA,iBAA8D;UAMlE7G,EADE,CAAAG,YAAA,EAAM,EACF;;;UAxC4BH,EAAA,CAAAI,SAAA,GAAgD;UAACJ,EAAjD,CAAA8G,WAAA,cAAAX,GAAA,CAAA9D,UAAA,mBAAgD,UAAA8D,GAAA,CAAA9D,UAAA,eAAyC;UACrHrC,EAAA,CAAAI,SAAA,EACF;UADEJ,EAAA,CAAAgB,kBAAA,cAAAmF,GAAA,CAAA9D,UAAA,QACF;UACgCrC,EAAA,CAAAI,SAAA,EAAwB;UAAxBJ,EAAA,CAAAmB,UAAA,aAAAgF,GAAA,CAAA3D,SAAA,GAAwB;UAClDxC,EAAA,CAAAI,SAAA,GAAmB;UAAnBJ,EAAA,CAAAmB,UAAA,SAAAgF,GAAA,CAAA5F,WAAA,GAAmB;UAMKP,EAAA,CAAAI,SAAA,GAA8C;UAACJ,EAA/C,CAAA8G,WAAA,cAAAX,GAAA,CAAA5D,QAAA,mBAA8C,UAAA4D,GAAA,CAAA5D,QAAA,eAAuC;UACjHvC,EAAA,CAAAI,SAAA,EACF;UADEJ,EAAA,CAAAgB,kBAAA,cAAAmF,GAAA,CAAA5D,QAAA,QACF;UACkCvC,EAAA,CAAAI,SAAA,EAAwB;UAAxBJ,EAAA,CAAAmB,UAAA,aAAAgF,GAAA,CAAA3D,SAAA,GAAwB;UACpDxC,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAAmB,UAAA,SAAAgF,GAAA,CAAA3F,SAAA,GAAiB;UACjBR,EAAA,CAAAI,SAAA,EAA4B;UAA5BJ,EAAA,CAAAmB,UAAA,SAAAgF,GAAA,CAAAlF,SAAA,GAAAC,MAAA,KAA4B;UAWIlB,EAAA,CAAAI,SAAA,GAAwB;UAAxBJ,EAAA,CAAAmB,UAAA,aAAAgF,GAAA,CAAA3D,SAAA,GAAwB;UACxDxC,EAAA,CAAAI,SAAA,GAAqB;UAArBJ,EAAA,CAAAmB,UAAA,SAAAgF,GAAA,CAAA9E,aAAA,GAAqB;UAKvBrB,EAAA,CAAAI,SAAA,GAAqC;UAArCJ,EAAA,CAAAgB,kBAAA,sBAAAmF,GAAA,CAAA1D,WAAA,QAAqC;UACTzC,EAAA,CAAAI,SAAA,EAAwB;UAAxBJ,EAAA,CAAAmB,UAAA,aAAAgF,GAAA,CAAA3D,SAAA,GAAwB;UAClDxC,EAAA,CAAAI,SAAA,GAAiC;UAAjCJ,EAAA,CAAAmB,UAAA,SAAAgF,GAAA,CAAA3E,cAAA,GAAAN,MAAA,KAAiC;;;qBA1CnCrB,YAAY,EAAAkH,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}