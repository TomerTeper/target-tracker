{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, computed, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardHeaderComponent } from './components/dashboard-header/dashboard-header.component';\nimport { StreamControlsComponent } from './components/stream-controls/stream-controls.component';\nimport { TargetListComponent } from './components/target-list/target-list.component';\nlet AppComponent = class AppComponent {\n  constructor(targetService) {\n    this.targetService = targetService;\n    // Signals\n    this.selectedClassification = signal('');\n    this.showBackendTest = signal(false);\n    // Computed signals\n    this.isConnected = this.targetService.isConnected;\n    this.targets = this.targetService.targets;\n    // Computed filtered targets\n    this.filteredTargets = computed(() => {\n      const targets = this.targets();\n      const classification = this.selectedClassification();\n      if (!classification) return targets;\n      return targets.filter(target => target.classification === classification);\n    });\n  }\n  toggleStream() {\n    if (this.isConnected()) {\n      this.targetService.stopSimulatedStream();\n    } else {\n      this.targetService.startSimulatedStream();\n    }\n  }\n  clearTargets() {\n    this.targetService.clearTargets();\n  }\n  onFilterChange(classification) {\n    this.selectedClassification.set(classification);\n  }\n  toggleBackendTest() {\n    this.showBackendTest.update(show => !show);\n  }\n  trackByTargetId(index, target) {\n    return target.id;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, DashboardHeaderComponent, StreamControlsComponent, TargetListComponent, BackendTestComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","computed","signal","ChangeDetectionStrategy","CommonModule","DashboardHeaderComponent","StreamControlsComponent","TargetListComponent","AppComponent","constructor","targetService","selectedClassification","showBackendTest","isConnected","targets","filteredTargets","classification","filter","target","toggleStream","stopSimulatedStream","startSimulatedStream","clearTargets","onFilterChange","set","toggleBackendTest","update","show","trackByTargetId","index","id","__decorate","selector","standalone","imports","BackendTestComponent","templateUrl","styleUrls","changeDetection","OnPush"],"sources":["C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, computed, signal, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TargetService } from './services/target.service';\r\nimport { Target } from './models/target.model';\r\nimport { DashboardHeaderComponent } from './components/dashboard-header/dashboard-header.component';\r\nimport { StreamControlsComponent } from './components/stream-controls/stream-controls.component';\r\nimport { TargetListComponent } from './components/target-list/target-list.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, \r\n    DashboardHeaderComponent,\r\n    StreamControlsComponent,\r\n    TargetListComponent,\r\n    BackendTestComponent\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent {\r\n  // Signals\r\n  selectedClassification = signal<'' | 'hostile' | 'friendly'>('');\r\n  showBackendTest = signal<boolean>(false);\r\n\r\n  // Computed signals\r\n  isConnected = this.targetService.isConnected;\r\n  targets = this.targetService.targets;\r\n  \r\n  // Computed filtered targets\r\n  filteredTargets = computed(() => {\r\n    const targets = this.targets();\r\n    const classification = this.selectedClassification();\r\n    \r\n    if (!classification) return targets;\r\n    return targets.filter(target => target.classification === classification);\r\n  });\r\n\r\n  constructor(private targetService: TargetService) {}\r\n\r\n  toggleStream() {\r\n    if (this.isConnected()) {\r\n      this.targetService.stopSimulatedStream();\r\n    } else {\r\n      this.targetService.startSimulatedStream();\r\n    }\r\n  }\r\n\r\n  clearTargets() {\r\n    this.targetService.clearTargets();\r\n  }\r\n\r\n  onFilterChange(classification: 'hostile' | 'friendly' | '') {\r\n    this.selectedClassification.set(classification);\r\n  }\r\n\r\n  toggleBackendTest() {\r\n    this.showBackendTest.update(show => !show);\r\n  }\r\n\r\n  trackByTargetId(index: number, target: Target): string {\r\n    return target.id;\r\n  }\r\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,uBAAuB,QAAQ,eAAe;AACpF,SAASC,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,wBAAwB,QAAQ,0DAA0D;AACnG,SAASC,uBAAuB,QAAQ,wDAAwD;AAChG,SAASC,mBAAmB,QAAQ,gDAAgD;AAgB7E,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAkBvBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAjBjC;IACA,KAAAC,sBAAsB,GAAGT,MAAM,CAA8B,EAAE,CAAC;IAChE,KAAAU,eAAe,GAAGV,MAAM,CAAU,KAAK,CAAC;IAExC;IACA,KAAAW,WAAW,GAAG,IAAI,CAACH,aAAa,CAACG,WAAW;IAC5C,KAAAC,OAAO,GAAG,IAAI,CAACJ,aAAa,CAACI,OAAO;IAEpC;IACA,KAAAC,eAAe,GAAGd,QAAQ,CAAC,MAAK;MAC9B,MAAMa,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;MAC9B,MAAME,cAAc,GAAG,IAAI,CAACL,sBAAsB,EAAE;MAEpD,IAAI,CAACK,cAAc,EAAE,OAAOF,OAAO;MACnC,OAAOA,OAAO,CAACG,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACF,cAAc,KAAKA,cAAc,CAAC;IAC3E,CAAC,CAAC;EAEiD;EAEnDG,YAAYA,CAAA;IACV,IAAI,IAAI,CAACN,WAAW,EAAE,EAAE;MACtB,IAAI,CAACH,aAAa,CAACU,mBAAmB,EAAE;KACzC,MAAM;MACL,IAAI,CAACV,aAAa,CAACW,oBAAoB,EAAE;;EAE7C;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACZ,aAAa,CAACY,YAAY,EAAE;EACnC;EAEAC,cAAcA,CAACP,cAA2C;IACxD,IAAI,CAACL,sBAAsB,CAACa,GAAG,CAACR,cAAc,CAAC;EACjD;EAEAS,iBAAiBA,CAAA;IACf,IAAI,CAACb,eAAe,CAACc,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAAC;EAC5C;EAEAC,eAAeA,CAACC,KAAa,EAAEX,MAAc;IAC3C,OAAOA,MAAM,CAACY,EAAE;EAClB;CACD;AA3CYtB,YAAY,GAAAuB,UAAA,EAdxB/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACP9B,YAAY,EACZC,wBAAwB,EACxBC,uBAAuB,EACvBC,mBAAmB,EACnB4B,oBAAoB,CACrB;EACDC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB,CAAC;EAClCC,eAAe,EAAEnC,uBAAuB,CAACoC;CAC1C,CAAC,C,EACW/B,YAAY,CA2CxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}