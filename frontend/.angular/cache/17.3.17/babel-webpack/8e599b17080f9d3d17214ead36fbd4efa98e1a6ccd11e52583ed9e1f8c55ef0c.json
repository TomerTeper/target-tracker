{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet StreamControlsComponent = class StreamControlsComponent {\n  constructor() {\n    // Input signals\n    this.isConnected = input(false);\n    this.selectedClassification = input('');\n    // Output signals\n    this.toggleStream = output();\n    this.clearTargets = output();\n    this.filterChange = output();\n  }\n  onToggleStream() {\n    this.toggleStream.emit();\n  }\n  onClearTargets() {\n    this.clearTargets.emit();\n  }\n  onFilterChange(event) {\n    const target = event.target;\n    this.filterChange.emit(target.value);\n  }\n};\nStreamControlsComponent = __decorate([Component({\n  selector: 'app-stream-controls',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './stream-controls.component.html',\n  styleUrls: ['./stream-controls.component.css']\n})], StreamControlsComponent);\nexport { StreamControlsComponent };","map":{"version":3,"names":["Component","input","output","CommonModule","FormsModule","StreamControlsComponent","constructor","isConnected","selectedClassification","toggleStream","clearTargets","filterChange","onToggleStream","emit","onClearTargets","onFilterChange","event","target","value","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\components\\stream-controls\\stream-controls.component.ts"],"sourcesContent":["import { Component, input, output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-stream-controls',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './stream-controls.component.html',\r\n  styleUrls: ['./stream-controls.component.css']\r\n})\r\nexport class StreamControlsComponent {\r\n  // Input signals\r\n  isConnected = input<boolean>(false);\r\n  selectedClassification = input<'' | 'hostile' | 'friendly'>('');\r\n  \r\n  // Output signals\r\n  toggleStream = output<void>();\r\n  clearTargets = output<void>();\r\n  filterChange = output<'hostile' | 'friendly' | ''>();\r\n\r\n  onToggleStream(): void {\r\n    this.toggleStream.emit();\r\n  }\r\n\r\n  onClearTargets(): void {\r\n    this.clearTargets.emit();\r\n  }\r\n\r\n  onFilterChange(event: Event): void {\r\n    const target = event.target as HTMLSelectElement;\r\n    this.filterChange.emit(target.value as '' | 'hostile' | 'friendly');\r\n  }\r\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACxD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AASrC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAA7BC,YAAA;IACL;IACA,KAAAC,WAAW,GAAGN,KAAK,CAAU,KAAK,CAAC;IACnC,KAAAO,sBAAsB,GAAGP,KAAK,CAA8B,EAAE,CAAC;IAE/D;IACA,KAAAQ,YAAY,GAAGP,MAAM,EAAQ;IAC7B,KAAAQ,YAAY,GAAGR,MAAM,EAAQ;IAC7B,KAAAS,YAAY,GAAGT,MAAM,EAA+B;EActD;EAZEU,cAAcA,CAAA;IACZ,IAAI,CAACH,YAAY,CAACI,IAAI,EAAE;EAC1B;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACJ,YAAY,CAACG,IAAI,EAAE;EAC1B;EAEAE,cAAcA,CAACC,KAAY;IACzB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA2B;IAChD,IAAI,CAACN,YAAY,CAACE,IAAI,CAACI,MAAM,CAACC,KAAoC,CAAC;EACrE;CACD;AAtBYb,uBAAuB,GAAAc,UAAA,EAPnCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,qBAAqB;EAC/BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACnB,YAAY,EAAEC,WAAW,CAAC;EACpCmB,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWnB,uBAAuB,CAsBnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}