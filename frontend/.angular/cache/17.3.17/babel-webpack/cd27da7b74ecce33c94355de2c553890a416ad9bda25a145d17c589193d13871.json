{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { DashboardHeaderComponent } from './components/dashboard-header/dashboard-header.component';\nimport { StreamControlsComponent } from './components/stream-controls/stream-controls.component';\nimport { TargetListComponent } from './components/target-list/target-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/target.service\";\nexport class AppComponent {\n  constructor(targetService) {\n    this.targetService = targetService;\n    this.targets = [];\n    this.filteredTargets = [];\n    this.isConnected = false;\n    this.selectedClassification = '';\n    this.autoScroll = true;\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    // Subscribe to targets stream\n    this.subscription.add(this.targetService.targets$.subscribe(targets => {\n      this.targets = targets;\n      this.applyFilter();\n    }));\n    // Subscribe to connection status\n    this.subscription.add(this.targetService.isConnected$.subscribe(connected => {\n      this.isConnected = connected;\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  toggleStream() {\n    if (this.isConnected) {\n      this.targetService.stopSimulatedStream();\n    } else {\n      this.targetService.startSimulatedStream();\n    }\n  }\n  clearTargets() {\n    this.targetService.clearTargets();\n  }\n  onFilterChange(classification) {\n    this.selectedClassification = classification;\n    this.applyFilter();\n  }\n  onAutoScrollChange(enabled) {\n    this.autoScroll = enabled;\n  }\n  applyFilter() {\n    if (!this.selectedClassification) {\n      this.filteredTargets = [...this.targets];\n    } else {\n      this.filteredTargets = this.targets.filter(target => target.classification === this.selectedClassification);\n    }\n  }\n  trackByTargetId(index, target) {\n    return target.id;\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TargetService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 6,\n      consts: [[1, \"dashboard\"], [3, \"isConnected\"], [3, \"toggleStream\", \"clearTargets\", \"filterChange\", \"autoScrollChange\", \"isConnected\", \"selectedClassification\", \"autoScroll\"], [3, \"targets\", \"autoScroll\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-dashboard-header\", 1);\n          i0.ɵɵelementStart(2, \"app-stream-controls\", 2);\n          i0.ɵɵlistener(\"toggleStream\", function AppComponent_Template_app_stream_controls_toggleStream_2_listener() {\n            return ctx.toggleStream();\n          })(\"clearTargets\", function AppComponent_Template_app_stream_controls_clearTargets_2_listener() {\n            return ctx.clearTargets();\n          })(\"filterChange\", function AppComponent_Template_app_stream_controls_filterChange_2_listener($event) {\n            return ctx.onFilterChange($event);\n          })(\"autoScrollChange\", function AppComponent_Template_app_stream_controls_autoScrollChange_2_listener($event) {\n            return ctx.onAutoScrollChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"app-target-list\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"isConnected\", ctx.isConnected);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"isConnected\", ctx.isConnected)(\"selectedClassification\", ctx.selectedClassification)(\"autoScroll\", ctx.autoScroll);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"targets\", ctx.filteredTargets)(\"autoScroll\", ctx.autoScroll);\n        }\n      },\n      dependencies: [CommonModule, DashboardHeaderComponent, StreamControlsComponent, TargetListComponent],\n      styles: [\".dashboard[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\n@media (max-width: 768px) {\\n  .dashboard[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGFBQWE7RUFDYiw0REFBNEQ7QUFDOUQ7O0FBRUE7RUFDRTtJQUNFLGFBQWE7RUFDZjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBmb250LWZhbWlseTogJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5kYXNoYm9hcmQge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICB9XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Subscription","DashboardHeaderComponent","StreamControlsComponent","TargetListComponent","AppComponent","constructor","targetService","targets","filteredTargets","isConnected","selectedClassification","autoScroll","subscription","ngOnInit","add","targets$","subscribe","applyFilter","isConnected$","connected","ngOnDestroy","unsubscribe","toggleStream","stopSimulatedStream","startSimulatedStream","clearTargets","onFilterChange","classification","onAutoScrollChange","enabled","filter","target","trackByTargetId","index","id","i0","ɵɵdirectiveInject","i1","TargetService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","AppComponent_Template_app_stream_controls_toggleStream_2_listener","AppComponent_Template_app_stream_controls_clearTargets_2_listener","AppComponent_Template_app_stream_controls_filterChange_2_listener","$event","AppComponent_Template_app_stream_controls_autoScrollChange_2_listener","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","styles"],"sources":["C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\app.component.ts","C:\\Users\\tomer\\Desktop\\mini-target-tracker\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TargetService } from './services/target.service';\r\nimport { Target } from './models/target.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { DashboardHeaderComponent } from './components/dashboard-header/dashboard-header.component';\r\nimport { StreamControlsComponent } from './components/stream-controls/stream-controls.component';\r\nimport { TargetListComponent } from './components/target-list/target-list.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, \r\n    DashboardHeaderComponent,\r\n    StreamControlsComponent,\r\n    TargetListComponent\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  targets: Target[] = [];\r\n  filteredTargets: Target[] = [];\r\n  isConnected = false;\r\n  selectedClassification: '' | 'hostile' | 'friendly' = '';\r\n  autoScroll = true;\r\n  \r\n  private subscription = new Subscription();\r\n\r\n  constructor(private targetService: TargetService) {}\r\n\r\n  ngOnInit() {\r\n    // Subscribe to targets stream\r\n    this.subscription.add(\r\n      this.targetService.targets$.subscribe(targets => {\r\n        this.targets = targets;\r\n        this.applyFilter();\r\n      })\r\n    );\r\n\r\n    // Subscribe to connection status\r\n    this.subscription.add(\r\n      this.targetService.isConnected$.subscribe(connected => {\r\n        this.isConnected = connected;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleStream() {\r\n    if (this.isConnected) {\r\n      this.targetService.stopSimulatedStream();\r\n    } else {\r\n      this.targetService.startSimulatedStream();\r\n    }\r\n  }\r\n\r\n  clearTargets() {\r\n    this.targetService.clearTargets();\r\n  }\r\n\r\n  onFilterChange(classification: 'hostile' | 'friendly' | '') {\r\n    this.selectedClassification = classification;\r\n    this.applyFilter();\r\n  }\r\n\r\n  onAutoScrollChange(enabled: boolean) {\r\n    this.autoScroll = enabled;\r\n  }\r\n\r\n  private applyFilter() {\r\n    if (!this.selectedClassification) {\r\n      this.filteredTargets = [...this.targets];\r\n    } else {\r\n      this.filteredTargets = this.targets.filter(\r\n        target => target.classification === this.selectedClassification\r\n      );\r\n    }\r\n  }\r\n\r\n  trackByTargetId(index: number, target: Target): string {\r\n    return target.id;\r\n  }\r\n} ","<div class=\"dashboard\">\r\n  <app-dashboard-header [isConnected]=\"isConnected\"></app-dashboard-header>\r\n  \r\n  <app-stream-controls \r\n    [isConnected]=\"isConnected\"\r\n    [selectedClassification]=\"selectedClassification\"\r\n    [autoScroll]=\"autoScroll\"\r\n    (toggleStream)=\"toggleStream()\"\r\n    (clearTargets)=\"clearTargets()\"\r\n    (filterChange)=\"onFilterChange($event)\"\r\n    (autoScrollChange)=\"onAutoScrollChange($event)\">\r\n  </app-stream-controls>\r\n  \r\n  <app-target-list [targets]=\"filteredTargets\" [autoScroll]=\"autoScroll\"></app-target-list>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}